apiVersion: v1
kind: ServiceAccount
metadata:
  name: ephdash-service-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ephdash-role
rules:
- apiGroups: [ "" ]
  resources: [ "pods", "pods/log", "services" ]
  verbs: ["get", "list", "watch"]
- apiGroups: [ "" ]
  resources: [ "configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ephdash-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ephdash-role
subjects:
- kind: ServiceAccount
  name: ephdash-service-account
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ephdash
  labels:
    app.kubernetes.io/name: "ephdash"
    app.kubernetes.io/part-of: "ephemerator.tilt.dev"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: "ephdash"
      app.kubernetes.io/part-of: "ephemerator.tilt.dev"
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "ephdash"
        app.kubernetes.io/part-of: "ephemerator.tilt.dev"
    spec:
      serviceAccountName: ephdash-service-account
      containers:
      - image: ephdash
        name: ephdash
        env:
        - name: 'EPH_ALLOWLIST'
          valueFrom:
            configMapKeyRef:
              name: ephconfig
              key: allowlist
        - name: 'EPH_GATEWAY_HOST'
          valueFrom:
            configMapKeyRef:
              name: ephconfig
              key: gatewayHost
        - name: 'NAMESPACE'
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
---
apiVersion: v1
kind: Service
metadata:
  name: ephdash
  labels:
    app.kubernetes.io/name: "ephdash"
    app.kubernetes.io/part-of: "ephemerator.tilt.dev"
spec:
  selector:
    app.kubernetes.io/name: ephdash
    app.kubernetes.io/part-of: ephemerator.tilt.dev
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
